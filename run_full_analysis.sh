#!/bin/bash

echo "üß¨ MetBio Pipeline - –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑"
echo "=================================="
echo "üìÇ –§–∞–π–ª –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: victor_full.csv"
echo "üî¨ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–∑—Ü–æ–≤: $(tail -n +2 victor_full.csv | wc -l)"
echo "üß™ –†–µ—Ñ–µ—Ä–µ–Ω—Å–Ω—ã–µ –≥–µ–Ω–æ–º—ã: $(ls data/lineages/*.fasta | wc -l) –ª–∏–Ω–∏–π SARS-CoV-2"
echo "‚öôÔ∏è  –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: lr-kallisto (–¥–ª—è long reads)"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
if [ ! -f "victor_full.csv" ]; then
    echo "‚ùå –§–∞–π–ª victor_full.csv –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

if [ ! -d "data/lineages" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ data/lineages –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    exit 1
fi

fastq_count=$(ls data/fastq/*.fastq 2>/dev/null | wc -l)
if [ $fastq_count -eq 0 ]; then
    echo "‚ùå FASTQ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ data/fastq/"
    exit 1
fi

echo "‚úÖ –í—Å–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ –º–µ—Å—Ç–µ"
echo ""

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—Ä–∞–∑—Ü–æ–≤
echo "üìã –ü–µ—Ä–≤—ã–µ 5 –æ–±—Ä–∞–∑—Ü–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:"
head -6 victor_full.csv | tail -5
echo "   ... –∏ –µ—â–µ $(expr $(tail -n +2 victor_full.csv | wc -l) - 5) –æ–±—Ä–∞–∑—Ü–æ–≤"
echo ""

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞..."
echo "–ö–æ–º–∞–Ω–¥–∞: nextflow run main.nf --input victor_full.csv --fasta_dir data/lineages -profile local"
echo ""

# –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
start_time=$(date)
echo "‚è∞ –ù–∞—á–∞–ª–æ: $start_time"
echo ""

# –ó–∞–ø—É—Å–∫
nextflow run main.nf \
  --input victor_full.csv \
  --fasta_dir data/lineages \
  -profile local

# –†–µ–∑—É–ª—å—Ç–∞—Ç
echo ""
echo "üìä –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "‚è∞ –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
success_count=0
total_samples=$(tail -n +2 victor_full.csv | wc -l)

while IFS=, read -r sample fastq; do
    if [ "$sample" != "sample" ]; then  # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if [ -f "results/${sample}/${sample}/abundance.tsv" ]; then
            lines=$(wc -l < "results/${sample}/${sample}/abundance.tsv")
            echo "‚úÖ ${sample}: ${lines} —Å—Ç—Ä–æ–∫ –≤ abundance.tsv"
            success_count=$((success_count + 1))
        else
            echo "‚ùå ${sample}: —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    fi
done < victor_full.csv

echo ""
echo "üìà –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${success_count}/${total_samples} –æ–±—Ä–∞–∑—Ü–æ–≤"
echo "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: results/"
echo ""

if [ $success_count -eq $total_samples ]; then
    echo "üéâ –í–°–ï –û–ë–†–ê–ó–¶–´ –£–°–ü–ï–®–ù–û –û–ë–†–ê–ë–û–¢–ê–ù–´!"
else
    echo "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–±—Ä–∞–∑—Ü—ã –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
fi